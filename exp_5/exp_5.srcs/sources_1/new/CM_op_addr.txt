//0-0 nop
000000_00_0000_00_00_000_00000_000001
//1-1 PC->MAR
000000_00_0000_00_00_011_00001_000010
//1-2 MAR->Memory; PC+4->PC
000000_00_0000_00_11_001_00101_000011
//1-3 Memory->MDR
000000_00_0000_11_01_000_00000_000100
//1-4 MDR->IR
000000_00_0011_01_00_000_00000_000101
//2-1 IR->CU
000000_00_0001_00_00_000_00000_000000

//add
//3-1 rs, rt->ALU; ALU: +
001011_01_0101_00_00_000_00000_000111
//3-2 ALU->rd
000001_11_0001_00_00_000_00000_000000
//sub
//3-1 rs, rt->ALU; ALU: -
001111_01_0101_00_00_000_00000_000111
//and
//3-1 rs, rt->ALU; ALU: &
010011_01_0101_00_00_000_00000_000111
//or
//3-1 rs, rt->ALU; ALU: |
010111_01_0101_00_00_000_00000_000111
//xor
//3-1 rs, rt->ALU; ALU: ^
011011_01_0101_00_00_000_00000_000111
//less(sltu)
//3-1 rs, rt->ALU; ALU: <
011111_01_0101_00_00_000_00000_000111

//addiu
//3-1 rs, imme->ALU; ALU: +
001011_01_1001_00_00_000_00000_001110
//3-2 ALU->rt
000001_11_0101_00_00_000_00000_000000
//andi
//3-1 rs, imme->ALU; ALU: &
010011_01_1001_00_00_000_00000_001110
//ori
//3-1 rs, imme->ALU; ALU: |
010111_01_1001_00_00_000_00000_001110

//lw
//3-1 RF_rs, IR_imme->MAR
000000_01_1001_00_00_111_00000_010010
//3-2 MAR->Memory
000000_00_0000_00_11_001_00000_010011
//3-3 Memory->MDR
000000_00_0000_11_01_000_00000_010100
//3-4 MDR->RF_rt
000000_11_0101_01_00_000_00000_000001

//sw
//3-1 RF_rs, IR_imme->MAR
000000_01_1001_00_00_111_00000_010110
//3-2 MAR->Memory; RF_rt->MDR
000000_01_0101_11_11_001_00000_010111
//3-3 MDR->Memory
000000_00_0000_01_11_000_00000_000000

//beq bne
//3-1 rs, rt->ALU; ALU: -
001111_01_0101_00_00_000_00000_011001
//3-2 ALU_eq->CU
000001_00_0000_00_00_000_00000_000000
//3-3 IR_imme->PC
000001_00_1001_00_00_000_01011_000000

//j
//3-1 IR_imme->PC
000000_00_1001_00_00_000_00011_000000